{
    "contents" : "# delta * N is the number of new admits per step\n# diff eq function\ndx.dt.orig <- function(t, y, param, delta=0) {\n    # current state\n    R <- y[\"R\"]\n    S <- y[\"S\"]\n    P <- y[\"P\"]\n    C <- y[\"C\"]\n    D <- y[\"D\"]\n\n    # params \n    a.r <- param[\"a.r\"]\n    a.s <- param[\"a.s\"]\n    a.cn <- param[\"a.cn\"]\n    a.cp <- param[\"a.cp\"]\n    a.d <- param[\"a.d\"]\n    alpha <- param[\"alpha\"]\n    theta <- param[\"theta\"]\n    beta.c <- param[\"beta.c\"]\n    beta.d <- param[\"beta.d\"] \n    f <- param[\"f\"]\n    epsilon <- param[\"epsilon\"]\n    p <- param[\"p\"]\n    phi <- param[\"phi\"]\n    k.r <- param[\"k.r\"]\n    k <- param[\"k\"]\n    k.d <- param[\"k.d\"]\n    \n    lambda <- param[\"beta.c\"] * (C + P) + \n              param[\"beta.d\"] * D\n    N = R + S + C + P + D\n\n    # ODEs\n    dR <- a.r * delta*N + theta*S - k.r*R - alpha * R\n    dS <- a.s * delta * N + alpha * R + p * epsilon * D - \n          theta * S - k * S - lambda * S\n    dP <- a.cp * delta * N + f * lambda * S - k * P\n    dC <- a.cn * delta * N + (1 - f) * lambda * S - phi * C - k * C\n    dD <- a.d * delta * N + phi * C - p * epsilon * D - k.d * D\n\n    return(list(c(dR, dS, dP, dC, dD)))\n}\n\ndx.dt.new <- function(t, y, param, delta = 1e-1) {\n    # current state\n    R <- y[\"R\"]\n    S.a <- y[\"S.abx\"]\n    S.f <- y[\"S.ft\"]\n    C <- y[\"C\"]\n    D <- y[\"D\"]\n\n    # params \n    a.r <- param[\"a.r\"]   #all a's are respective admission proportion (delta is overall admit rate/N/day)\n    a.s.abx <- param[\"a.s.abx\"]\n    a.s.ft <- param[\"a.s.ft\"]\n    a.c <- param[\"a.c\"]\n    a.d <- param[\"a.d\"]\n    alpha <- param[\"alpha\"]   # abx Rx rate in R (community) (R -> S rate)\n    theta.abx <- param[\"theta.abx\"]   #S.abx -> R rate\n    theta.ft <- param[\"theta.ft\"]   #S.ft -> R rate\n    beta.c <- param[\"beta.c\"]\n    beta.d <- param[\"beta.d\"]   \n    epsilon <- param[\"epsilon\"]   #abx Tx rate /day (for diseased)\n    e <- param[\"e\"]   #fecal trsplt rate /day (diseased)\n    p <- param[\"p\"]   #prob. of abx Tx success\n    rho <- param[\"rho\"]   #prob. of fecal transplant success\n    tau <- param[\"tau\"]   # proportion of patients (D) receiving fecal transplant \n    phi <- param[\"phi\"]   # disease rate/day in C\n    k.r <- param[\"k.r\"]   # R dc rate /day\n    k <- param[\"k\"]   # S & C dc rate \n    k.d <- param[\"k.d\"]   # D dc rate\n    \n    lambda <- param[\"beta.c\"] * C + \n              param[\"beta.d\"] * D    # transmission (S -> C)\n    N = R + S.abx + S.ft + C + D\n\n    # ODEs\n    dR <- a.r * delta*N + theta.abx*S.abx + theta.ft * S.ft - k.r*R - alpha * R\n    dS.ft <- a.s.ft * delta * N + p * epsilon * D * (1-tau) - \n           theta.ft * S.ft - k * S.ft - lambda * S.ft\n    dS.abx <- a.s.abx * delta * N + alpha * R + rho * e * D * tau - \n           theta.abx * S.abx - k * S - lambda * S.abx\n    dC <- a.c * delta * N + lambda * S.abx + lambda * S.ft - phi * C - k * C\n    dD <- a.d * delta * N + phi * C - p * epsilon * D * (1-tau) - rho * e * D * tau - k.d * D\n\n    return(list(c(dR, dS, dC, dD)))\n}\n",
    "created" : 1430676819767.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2566967032",
    "id" : "25F07533",
    "lastKnownWriteTime" : 1431546474,
    "path" : "~/IDD C. diff/R/model.R",
    "project_path" : "R/model.R",
    "properties" : {
    },
    "source_on_save" : true,
    "type" : "r_source"
}